---
openapi: 3.0.1
info:
  title: TicketApp API
  description: Main API Information
  version: '1.0'
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  "/users/register":
    post:
      tags:
      - user-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/users/login":
    post:
      tags:
      - user-controller
      operationId: loginUser
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/tickets/save":
    post:
      tags:
      - ticket-controller
      operationId: saveAndResponse
      parameters:
      - name: userEmail
        in: query
        required: true
        schema:
          type: string
      - name: travelId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/TicketDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TicketDto"
  "/tickets/buy":
    post:
      tags:
      - ticket-controller
      operationId: buyTickets
      parameters:
      - name: userEmail
        in: query
        required: true
        schema:
          type: string
      - name: travelId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/TicketDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TicketDto"
  "/users/{id}/tickets":
    get:
      tags:
      - user-controller
      operationId: getTicketsByUserId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TicketDto"
  "/users/email/{email}":
    get:
      tags:
      - user-controller
      operationId: getByUserEmail
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserDto"
  "/travels":
    get:
      tags:
      - travel-controller
      operationId: getTravelByPropertiesOrAll
      parameters:
      - name: vehicle
        in: query
        required: false
        schema:
          type: string
          enum:
          - BUS
          - PLANE
      - name: toStation
        in: query
        required: false
        schema:
          type: string
      - name: fromStation
        in: query
        required: false
        schema:
          type: string
      - name: arrivalTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: departureTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TravelDto"
  "/travels/{id}":
    get:
      tags:
      - travel-controller
      operationId: getTravelById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/TravelDto"
  "/tickets/user/{userEmail}":
    get:
      tags:
      - ticket-controller
      operationId: getTicketsByUserEmail
      parameters:
      - name: userEmail
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TicketDto"
  "/users/{email}":
    delete:
      tags:
      - user-controller
      operationId: deleteByUserEmail
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
components:
  schemas:
    PassengerDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        mobilePhoneNumber:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
    PaymentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userEmail:
          type: string
        paymentType:
          type: string
          enum:
          - CREDIT_CARD
          - EFT
        travelId:
          type: integer
          format: int64
        seatNumber:
          type: integer
          format: int32
        iban:
          type: string
        cardNumber:
          type: string
        securityCode:
          type: string
        amount:
          type: number
        paymentTime:
          type: string
          format: date-time
        isCanceled:
          type: boolean
    TicketDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        seatNumber:
          type: integer
          format: int32
        travel:
          "$ref": "#/components/schemas/TravelDto"
        passenger:
          "$ref": "#/components/schemas/PassengerDto"
        payment:
          "$ref": "#/components/schemas/PaymentDto"
    TravelDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        vehicle:
          type: string
          enum:
          - BUS
          - PLANE
        ticketPrice:
          type: number
        fromStation:
          type: string
        toStation:
          type: string
        seatCapacity:
          type: integer
          format: int32
        departureTime:
          type: string
          format: date-time
        arrivalTime:
          type: string
          format: date-time
        purchasedSeats:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        isCanceled:
          type: boolean
    UserDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        mobilePhoneNumber:
          type: string
        tickets:
          type: array
          items:
            "$ref": "#/components/schemas/TicketDto"
        userType:
          type: string
          enum:
          - INDIVIDUAL
          - CORPORATE
